import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        if row != board[-1]:
            print("-" * 9)

def check_win(board, player):
    for i in range(3):
        if all(cell == player for cell in board[i]) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    return all(cell != " " for row in board for cell in row)

def get_best_move(board):
    empty_cells = [(i, j) for i in range(3) for j in range(3) if board[i][j] == " "]
    random.shuffle(empty_cells)  # Shuffle to add some randomness
    return empty_cells[0]

def make_move(board, player, row, col):
    if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
        board[row][col] = player
        print_board(board)
        return True
    else:
        print("Invalid move! Try again.")
        return False

def player_turn(board):
    while True:
        try:
            row = int(input("Enter row (1, 2, or 3): ")) - 1
            col = int(input("Enter column (1, 2, or 3): ")) - 1
            if make_move(board, "X", row, col):
                break
        except ValueError:
            print("Invalid input! Please enter a number.")

def computer_turn(board):
    move = get_best_move(board)
    board[move[0]][move[1]] = "O"
    print("Computer's move:")
    print_board(board)

def play_game():
    board = [[" " for _ in range(3)] for _ in range(3)]
    print("Welcome to Tic Tac Toe with Magic Square Method!")
    print_board(board)
    while True:
        player_turn(board)
        if check_win(board, "X"):
            print("Congratulations! You win!")
            break
        if is_board_full(board):
            print("It's a draw!")
            break
        computer_turn(board)
        if check_win(board, "O"):
            print("Computer wins! Better luck next time.")
            break

if __name__ == "__main__":
    play_game()
